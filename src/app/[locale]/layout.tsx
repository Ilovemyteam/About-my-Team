import React from "react";
import { getTranslations } from "next-intl/server";
import { NextIntlClientProvider, useMessages } from "next-intl";
import localFont from "next/font/local";
import { ThemeProvider } from "@/src/providers/ThemeProvider";
import { cookies } from "next/headers";
import "./globals.css";

const caviar = localFont({
    src: [
        {
            path: "../../fonts/CaviarDreams/CaviarDreams.ttf",
            weight: "400",
            style: "normal",
        },

        {
            path: "../../fonts/CaviarDreams/CaviarDreams_Bold.ttf",
            weight: "700",
            style: "normal",
        },
    ],
    variable: "--font-caviar",
});

const geist = localFont({
    src: [
        {
            path: "../../fonts/Geist/Geist-Regular.woff2",
            weight: "400",
            style: "normal",
        },
    ],
    variable: "--font-geist",
});

export async function generateMetadata({
    params: { locale },
}: {
    params: { locale: string };
}) {
    const t = await getTranslations({ locale, namespace: "Home" });

    return {
        title: t("title"),
        description: "Generated by create next app",
    };
}

export default function LocaleLayout({
    children,
    params: { locale },
}: Readonly<{
    children: React.ReactNode;
    params: { locale: string };
}>) {
    const messages = useMessages();
    const cookieStore = cookies();
    const userTheme = cookieStore.get("theme") || { value: "dark" };

    return (
        <html lang={locale} suppressHydrationWarning>
            <NextIntlClientProvider locale={locale} messages={messages}>
                <body
                    className={`${caviar.variable} ${geist.variable} 
                    h-[100vh] ${userTheme?.value === "dark" ? "bg-purple-200" : "bg-grey"}
                    after:h-[221px] after:content-heart after:absolute after:bottom-0 after:left-[34px] after:overflow-hidden  after:z-[-1]
                    before:content-triangles before:absolute before:top-0 before:right-0 before:h-[100vh] before:overflow-hidden before:z-[-1]
                    `}
                >
                    <ThemeProvider>
                        {/*TO:DO basic styles for the side bar */}
                        <header className="hidden pc:fixed top-0 left-0 w-[80px] h-[100vh] bg-tranarent pc:flex flex-col justify-between py-2">
                            <p>top</p>
                            <p>center</p>
                            <p>botton</p>
                        </header>
                        {/*TO:DO basic styles for the dark theme */}
                        <main>{children}</main>
                        <footer></footer>
                    </ThemeProvider>
                </body>
            </NextIntlClientProvider>
        </html>
    );
}
